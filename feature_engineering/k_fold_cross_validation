from sklearn.model_selection import KFold
from sklearn.linear_model import LinearRegression
from sklearn.datasets import load_iris
from sklearn.metrics import mean_squared_error
import numpy as np


# loading dataset and creating table
iris = load_iris()
X = iris.data  
feature_name = iris.feature_names
target = iris.target
target_names = iris.targer_names
label = [target_names[i] for i in target]
y = iris.data[:, 0]  

k_folds = 5
kf = KFold(n_splits=k_folds, shuffle=True, random_state=42)


model = LinearRegression()


mse_scores = []

print(kf.split)

for train_index, test_index in kf.split(X):
    X_train, X_test = X[train_index], X[test_index]
    y_train, y_test = y[train_index], y[test_index]

    model.fit(X_train, y_train)

    y_pred = model.predict(X_test)

    mse = mean_squared_error(y_test, y_pred)
    mse_scores.append(mse)


average_mse = np.mean(mse_scores)

print(f"Average Mean Squared Error across {k_folds} folds: {average_mse}")
